buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: '5.1.+', changing: true
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
}
apply plugin: "net.minecraftforge.gradle"
apply from: "buildtools/AppleSiliconSupport.gradle"

// these are required for the java plugin to generate jar files with a version
version = "${version_major}.${version_minor}.${version_patch}"
group = 'mezz.itemzoom' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "itemzoom-${minecraft_version}"

// Mojang ships Java 17 to end users in 1.18+
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: project.minecraft_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            property 'forge.logging.console.level', 'debug'
            workingDirectory file('run')
            mods {
                itemzoom {
                    sources sourceSets.main
                }
            }
        }
        server {
            property 'forge.logging.console.level', 'debug'
            workingDirectory file('run')
            mods {
                itemzoom {
                    sources sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = "jei"
        url "https://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
    minecraft([
            group  : "${project.forge_group}",
            name   : "forge",
            version: "${project.minecraft_version}-${project.forge_version}"
    ])
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
}

jar {
    manifest {
        attributes([
                'Specification-Title'     : 'Item Zoom',
                'Specification-Vendor'    : 'mezz',
                'Specification-Version'   : "${project.version}",
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : "${project.version}",
                'Implementation-Vendor'   : 'mezz',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Automatic-Module-Name": "mezz.itemzoom",
        ])
    }
}

def replaceResources = tasks.register("replaceResources", Copy) {
    it.outputs.upToDateWhen { false }
    // Copy it into the build dir
    it.from(sourceSets.main.resources) {
        include "META-INF/mods.toml"
        expand 'version': version, 'mc_version': minecraft_version_range, 'forge_version': forge_version_range, "jei_version_range": jei_version_range, "loader_version": loader_version_range
    }
    it.into "$buildDir/resources/main/"
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.FAIL)
    exclude('META-INF/mods.toml')
    configure { finalizedBy(replaceResources) }
}

classes.configure {
    dependsOn(replaceResources)
}

idea {
    module {
        for (String exclude in ['run', 'out', 'logs']) {
            excludeDirs += file(exclude)
        }
    }
}
